# -*- mode: ruby -*-
# vi: set ft=ruby :

home_dir = ENV['HOME']
docker_hdd= home_dir + '/VirtualBox HDDs/{{ VADO_NAME }}/docker_hdd.vdi'
pubkey = File.read(File.dirname(__FILE__)+"/{{ VADO_SSH_KEY_FILE }}.pub")

# ---------------------------------------------
# script to run on every (re)start
# ---------------------------------------------
$script_always = <<SCRIPT
set -e
echo Running 'always' provisioning...
if file -Ls /dev/sdb | grep -q ext4; then
  echo 'No mkfs.ext4 needed';
else
  mkfs.ext4 /dev/sdb;
fi

if mount | grep -qs "/var/lib/docker"; then
  echo 'Mount exists'
else
  echo 'Mounting /var/lib/docker to secondary disk'
  mkdir -p /var/lib/docker
  mount -t ext4 /dev/sdb /var/lib/docker
fi

if service docker status > /dev/null 2>&1; then
  echo 'Restarting docker daemon...'
  service docker restart
fi


echo 'Done: always setup'
SCRIPT
# ---------------------------------------------

# ---------------------------------------------
# script to run once on initial setup
# ---------------------------------------------
$script_init = <<SCRIPT
set -e
echo Running 'initial' provisioning...
# install VBoxGuestAdditions for eg. timesync
echo 'deb http://ftp.de.debian.org/debian jessie main contrib non-free' > /etc/apt/sources.list.d/debian_contrib_nonfree.list
apt-get update
apt-get install -y virtualbox-guest-additions-iso
mount /usr/share/virtualbox/VBoxGuestAdditions.iso /mnt/
# workaround for misleading return code != 0
# see http://stackoverflow.com/a/25943638
export REMOVE_INSTALLATION_DIR=0
/mnt/VBoxLinuxAdditions.run --nox11
umount /mnt/
# set hold flag for package to disable auto (dist)upgrades
apt-mark hold virtualbox-guest-additions-iso
systemctl disable ntpd 2>/dev/null
systemctl enable vboxadd-service
service vboxadd-service restart

echo 'Done: initial setup'
SCRIPT
# ---------------------------------------------
Vagrant.configure(2) do |config|

  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  config.vm.box = "{{ VADO_BOX }}"
  config.vm.network "private_network", ip: "{{ VADO_IP }}"

  # Mac OS X
  config.vm.synced_folder home_dir, home_dir, type: "nfs", mount_options: ['actimeo=2', 'tcp']

  # Name in Vagrant
  config.vm.define "{{ VADO_NAME }}" do |vado_name|
  end

  config.vm.provider "virtualbox" do |vb|
     # Name in VBoxManage
     vb.name = "{{ VADO_NAME }}"
     vb.cpus = "{{ VADO_CPUS }}"
     vb.memory = {{ VADO_RAM }}
     unless File.exist?(docker_hdd)
         vb.customize ['createhd', '--filename', docker_hdd, '--size', {{ VADO_DISK_SIZE_GB }} * 1024]
     end
     vb.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', docker_hdd]

     # set timesync parameters to keep VM clocks in sync
     # sync time every 10 seconds
     vb.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-interval", 10000 ]
     # adjustments if drift > 100 ms
     vb.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-min-adjust", 100 ]
     # sync time on restore and start
     vb.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-on-restore", 1 ]
     vb.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-start", 1 ]
     # at 1 second drift, the time will be set and not "smoothly" adjusted
     vb.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold", 1000 ]

  end

  # we need a newline after vagrant default key
  config.vm.provision "shell", inline: "echo '' >> .ssh/authorized_keys"
  config.vm.provision "shell", inline: "echo '" + pubkey + "' >> .ssh/authorized_keys"

  ### TODO: Virtualbox Guest Additions not available on stretch --- config.vm.provision "shell", privileged: true, inline: $script_init
  config.vm.provision "shell", privileged: true, run: "always", inline: $script_always

end
